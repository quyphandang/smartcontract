{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport EthSwap from '../abis/EthSwap.json';\nimport Token from '../abis/Token.json';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, tokenData, token, tokenBalance, ethSwapData, ethSwap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                // console.log(accounts[0]) \n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); // console.log(this.state.ethBalance)\n                // const abi = Token.abi \n                //Load token\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                tokenData = Token.networks[networkId]; // console.log(Token.networks['5777'].address)\n\n                if (!tokenData) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                // const token = new web3.eth.Contract(abi, address)\n                // console.log(tokenData.address)\n                token = new web3.eth.Contract(Token.abi, tokenData.address); // console.log(token)\n\n                this.setState({\n                  token: token\n                });\n                _context2.next = 18;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 18:\n                tokenBalance = _context2.sent;\n                // console.log(\"tokenBalance\", tokenBalance.toString() )\n                this.setState({\n                  tokenBalance: tokenBalance.toString()\n                });\n                _context2.next = 23;\n                break;\n\n              case 22:\n                window.alert('Token contract not deployed to detected network.');\n\n              case 23:\n                //Load EthSwap\n                ethSwapData = EthSwap.networks[networkId]; // console.log(Token.networks['5777'].address)\n\n                if (ethSwapData) {\n                  // const token = new web3.eth.Contract(abi, address)\n                  // console.log(tokenData.address)\n                  ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address); // console.log(token)\n\n                  this.setState({\n                    ethSwap: ethSwap\n                  }); // let ethSwapBalance = await ethSwap.methods.balanceOf(this.state.account).call()\n                  // this.setState({ ethSwapBalance: ethSwapBalance.toString() })\n                } else {\n                  window.alert('EthSwap contract not deployed to detected network.');\n                }\n\n                console.log(this.state.ethSwap);\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      token: {},\n      ethSwap: {},\n      ethBalance: '0',\n      tokenBalance: '0'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.account)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookair/Desktop/smartcontract/dappuni/eth_swap/src/components/App.js"],"names":["React","Component","Web3","logo","EthSwap","Token","Navbar","Main","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","tokenData","networks","token","Contract","abi","address","methods","balanceOf","call","tokenBalance","toString","alert","ethSwapData","ethSwap","console","log","ethereum","enable","currentProvider","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,G;;;;;;;;;;;;;;;;uBAEI,KAAKC,QAAL,E;;;;uBAEA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKAC,gBAAAA,I,GAAOC,MAAM,CAACD,I;;uBAEGA,IAAI,CAACE,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN;AACA,qBAAKC,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAlB,iBAAd;;uBAEyBJ,IAAI,CAACE,GAAL,CAASK,UAAT,CAAoB,KAAKC,KAAL,CAAWF,OAA/B,C;;;AAAnBG,gBAAAA,U;AACN,qBAAKJ,QAAL,CAAc;AAACI,kBAAAA,UAAU,EAAVA;AAAD,iBAAd,E,CACA;AACA;AAEA;;;uBACwBT,IAAI,CAACE,GAAL,CAASQ,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,S,GAAYnB,KAAK,CAACoB,QAAN,CAAeF,SAAf,C,EAClB;;qBAEGC,S;;;;;AACD;AACA;AACME,gBAAAA,K,GAAQ,IAAIf,IAAI,CAACE,GAAL,CAASc,QAAb,CAAsBtB,KAAK,CAACuB,GAA5B,EAAgCJ,SAAS,CAACK,OAA1C,C,EACd;;AACA,qBAAKb,QAAL,CAAc;AAAEU,kBAAAA,KAAK,EAALA;AAAF,iBAAd;;uBACyBA,KAAK,CAACI,OAAN,CAAcC,SAAd,CAAwB,KAAKZ,KAAL,CAAWF,OAAnC,EAA4Ce,IAA5C,E;;;AAArBC,gBAAAA,Y;AACJ;AACA,qBAAKjB,QAAL,CAAc;AAAEiB,kBAAAA,YAAY,EAAEA,YAAY,CAACC,QAAb;AAAhB,iBAAd;;;;;AAECtB,gBAAAA,MAAM,CAACuB,KAAP,CAAa,kDAAb;;;AAGH;AACMC,gBAAAA,W,GAAchC,OAAO,CAACqB,QAAR,CAAiBF,SAAjB,C,EACpB;;AAEA,oBAAGa,WAAH,EAAgB;AACd;AACA;AACMC,kBAAAA,OAHQ,GAGE,IAAI1B,IAAI,CAACE,GAAL,CAASc,QAAb,CAAsBvB,OAAO,CAACwB,GAA9B,EAAkCQ,WAAW,CAACP,OAA9C,CAHF,EAId;;AACA,uBAAKb,QAAL,CAAc;AAAEqB,oBAAAA,OAAO,EAAPA;AAAF,mBAAd,EALc,CAMd;AACA;AACD,iBARD,MAQO;AACJzB,kBAAAA,MAAM,CAACuB,KAAP,CAAa,oDAAb;AACF;;AAEDG,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWkB,OAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIIzB,MAAM,CAAC4B,Q;;;;;AACT5B,gBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIT,IAAJ,CAASU,MAAM,CAAC4B,QAAhB,CAAd;;uBACM5B,MAAM,CAAC4B,QAAP,CAAgBC,MAAhB,E;;;;;;;AACD,oBAAI7B,MAAM,CAACD,IAAX,EAAiB;AACtBC,kBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIT,IAAJ,CAASU,MAAM,CAACD,IAAP,CAAY+B,eAArB,CAAd;AACD,iBAFM,MAEA;AACL9B,kBAAAA,MAAM,CAACuB,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;AAGH,eAAYQ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKxB,KAAL,GAAa;AACXF,MAAAA,OAAO,EAAE,EADE;AAEXS,MAAAA,KAAK,EAAE,EAFI;AAGXW,MAAAA,OAAO,EAAE,EAHE;AAIXjB,MAAAA,UAAU,EAAE,GAJD;AAKXa,MAAAA,YAAY,EAAE;AALH,KAAb;AAFiB;AAUlB;;;;6BAEQ;AACP;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,wCADP;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAK,QAAA,GAAG,EAAEd,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF,CADF,CAFF,CADF;AAsBD;;;;EAxGeF,S;;AA2GlB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport EthSwap from '../abis/EthSwap.json';\nimport Token from '../abis/Token.json';\nimport './App.css';\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n async componentWillMount() {\n    await this.loadWeb3()\n    // console.log(window.web3)\n    await this.loadBlockchainData()\n\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    // console.log(accounts[0]) \n    this.setState({account: accounts[0]})\n\n    const ethBalance = await web3.eth.getBalance(this.state.account)\n    this.setState({ethBalance})\n    // console.log(this.state.ethBalance)\n    // const abi = Token.abi \n\n    //Load token\n    const networkId = await web3.eth.net.getId()\n    const tokenData = Token.networks[networkId]\n    // console.log(Token.networks['5777'].address)\n    \n    if(tokenData) { \n      // const token = new web3.eth.Contract(abi, address)\n      // console.log(tokenData.address)\n      const token = new web3.eth.Contract(Token.abi,tokenData.address)\n      // console.log(token)\n      this.setState({ token })\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\n      // console.log(\"tokenBalance\", tokenBalance.toString() )\n      this.setState({ tokenBalance: tokenBalance.toString() })\n    } else {\n       window.alert('Token contract not deployed to detected network.')\n    }\n\n    //Load EthSwap\n    const ethSwapData = EthSwap.networks[networkId]\n    // console.log(Token.networks['5777'].address)\n    \n    if(ethSwapData) { \n      // const token = new web3.eth.Contract(abi, address)\n      // console.log(tokenData.address)\n      const ethSwap = new web3.eth.Contract(EthSwap.abi,ethSwapData.address)\n      // console.log(token)\n      this.setState({ ethSwap })\n      // let ethSwapBalance = await ethSwap.methods.balanceOf(this.state.account).call()\n      // this.setState({ ethSwapBalance: ethSwapBalance.toString() })\n    } else {\n       window.alert('EthSwap contract not deployed to detected network.')\n    }\n\n    console.log(this.state.ethSwap)\n   \n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      account: '',\n      token: {},\n      ethSwap: {},\n      ethBalance: '0',\n      tokenBalance: '0'\n    };\n    \n  }\n\n  render() {\n    // console.log(this.state.account)\n    return (\n      <div>\n        <Navbar account={this.state.account}/>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <Main />\n               \n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}